spring:
  application:
    name: zuul
    
server:
  port: 3001
  
  cloud:
    config:
      override-none: true
      
  rabbitmq:
    host: 192.168.64.140
    port: 5672
    username: admin
    password: admin
  
eureka:
  client:
    service-url:
      defaultZone: http://eureka1:2001/eureka, http://eureka2:2002/eureka





#通过 ribbon 访问 item-service，当超时，ribbon 会重试请求集群中其他服务器
#ribbon的重试机制，在 feign 和 zuul 中进一步进行了封装，后续可以使用feign或zuul的重试机制
zuul:
  retryable: true
  sensitive-headers: #不过滤zuul 会过滤敏感 http 协议头，默认过滤以下协议头：Cookie Set-Cookie Authorization




  
  routes:
     item-service: /item-service/**
     user-service: /user-service/**
     order-service: /order-service/**
    
ribbon:
  ConnectTimeout: 1000
  ReadTimeout: 2000
  MaxAutoRetriesNextServer: 1
  MaxAutoRetries: 1
  
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 500
   
 #暴露需要监控的端点 在08hystrix-dashboradhttp://localhost:4001/hystrix 
 #仪表盘中输入就可以看见突变 http://localhost:3001/actuator/hystrix.stream         
management:
  endpoints:
    web:
      exposure:
        include: hystrix.stream


  


